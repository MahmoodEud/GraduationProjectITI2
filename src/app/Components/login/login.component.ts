import { Component, inject } from '@angular/core';
import { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';
import { Router, RouterModule } from '@angular/router';
import { ToastrService } from 'ngx-toastr';
import { environment } from '../../Services/register/environment';
import { AccountService } from '../../Services/account.service';
import { ILoginUser } from '../../Interfaces/ilogin-user';
import Swal from 'sweetalert2';

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [RouterModule,FormsModule],
  templateUrl: './login.component.html',
  styleUrl: './login.component.css',
})
export class LoginComponent {
  /*
  constructor(public Login:LoginService,private router: Router,private toaster:ToastrService) {}
  onSubmit(){
    this.Login.login().subscribe({
      next:res=>{
        this.toaster.success('ุชู ุชุณุฌูู ุงูุฏุฎูู ุจูุฌุงุญ');
        localStorage.setItem('token', JSON.stringify(res));
        this.router.navigateByUrl('/MainPage')
      },
        error: err => {
         this.toaster.error('ุฎุทุฃ ูู ุงุณู ุงููุณุชุฎุฏู ุฃู ูููุฉ ุงููุฑูุฑ');
      }
    })
  }
  */

  private router = inject(Router);
  private toastr = inject(ToastrService);
  accoutnService = inject(AccountService);
  // model:any;
  model: ILoginUser = { 
    username:'',
    password:''
  };
alert(){
Swal.fire({
  title: "<strong> ุณูุงุณุฉ ุงูุฎุตูุตูุฉ</strong>",
  icon: "info",
  html: `
  <p>ูุถูุงู ุชุดุบูู ุงูููุตุฉ ุจุฏูู ุฃู ุนุทู ุฃู ุจุทุก ูู ุชุญููู ุงูููุฏูููุงุชุ ูุฑุฌู ุงูุงูุชุฒุงู ุจุงูุชุนูููุงุช ุงูุชุงููุฉ:</p>
<p>1-ุงูููุตุฉ ุนุจุงุฑุฉ ุนู ูููุน ููุจ ูุชุงุญ ุนูู ูุชุตูุญุงุช ุงูููุจ ูุซู ุฌูุฌู ูุฑูู ุงู ูุงูุฑ ูููุณ ููุท ูููุณุช ุชุทุจูู  ููุงูุฏุฑููุฏ ุงู ุงูุงูููู .</p>
<p>2-ูุฌุจ ูุชุญ ุงูููุตุฉ ูู ูุงุชู ูุญููู ุฃู ุฌูุงุฒ ููุจููุชุฑ ุฃู ูุงุจ ุชูุจุ ููุญุธุฑ ุชูุงูุงู ุงุณุชุฎุฏุงู ุฃุฌูุฒุฉ ุงูุชุงุจูุช ุงูุฎุงุตุฉ ุจุงููุฏุงุฑุณ ูุฃููุง ุบูุฑ ูุคููุฉ ูุงุณุชุฎุฏุงู ุงูููุตุฉ ุญุชู ูุฅู ูุงูุช ูุชููุฑุฉ.</p>
<p>
    3-ุจุนุฏ ุงูุงุดุชุฑุงูุ ูุด ููููู ูุชุงุญ ุงุณุชุฑุฌุงุน ุงูููุฑุณ ุฃู ุชุจุฏูููุ ูุฐุง ูุฌุจ ุงูุชุฃูุฏ ุฌูุฏุงู ูู ุงูููุฑุณ ุงูุฐู ุชุฑุบุจ ูู ุงูุงุดุชุฑุงู ููู.๐ซ
</p>
<p>
    4- ุงูุญุณุงุจ ูุฎุตุต ูุงุณุชุฎุฏุงูู ุงูุดุฎุตู ููุท ููุง ููุณูุญ ุจูุดุงุฑูุชู ูุน ุฃุตุฏูุงุฆู. ูู ุญุงูุฉ ุงูุชุดุงู ูุดุงุฑูุฉ ุงูุญุณุงุจ ุณูุชู ุฅุบูุงูู ููุงุฆูุงู.
</p>
<p>
    5-ูุฌุจ ุงุณุชุฎุฏุงู ุฅูุชุฑูุช ููู ููุณุชูุฑ ูููุถู ุงุณุชุฎุฏุงู ุดุจูุฉ ูุงู ูุงู ูุณุชูุฑุฉ.
</p>
<p>
    6-ุนูุฏ ุงูุชุณุฌูู ุนูู ุงูููุตุฉุ ูุฌุจ ุงูุชุฃูุฏ ูู ุตุญุฉ ุจูุงูุงุชู ูุถูุงู ุงููุชุงุจุนุฉ ุงูุฏูุฑูุฉ ุจุดูู ุตุญูุญ.
</p>
<p>
    7-ูุฌุจ ูุชุงุจุฉ ุงูุงุณู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ููุง ูู ูู ุงูุจุทุงูุฉ ุนูุฏ ุงูุชุณุฌูู.
</p>
<p>
    8-ูุง ุชูุณู ุงูุชุฃูุฏ ูู ุฑูู ุงููุงุชู ููููุฉ ุงููุฑูุฑ ููุชุงุจุฉ ูุฐู ุงููุนูููุงุช ูู ููุงู ุขูู ุญุชู ูุง ุชูุณุงูุง.
</p>
<p>
    9-ููููู ูุดุงูุฏุฉ ุงูููุฏูู ุงููุงุญุฏ ุนูู ุงูููุตุฉ ุจุญุฏ ุฃูุตู ุฎูุณ ูุฑุงุช ุฎูุงู ุงูุนุงู ุงูุฏุฑุงุณู ุงููุงุญุฏ.

</p>
<p>
    10-ุชูุญุณุจ ุงููุดุงูุฏุฉ ุนูุฏ ุชุฌุงูุฒ 30% ูู ูุฏุฉ ุงูููุฏูู.
</p>
<p>
    11-ูุฌุจ ูุชุงุจุนุฉ ุงูููุตุฉ ุจุดูู ุฏูุฑู ูุญู ุงููุงุฌุจุงุช ูุงูุงุฎุชุจุงุฑุงุช ูุฃู ููุงู ุชูุงุฑูุฑ ุฃุณุจูุนูุฉ ุชูุฑุณู ุฅูู ููู ุงูุฃูุฑ ุญูู ูุดุงุทู ุนูู ุงูููุตุฉ.
</p>
<p>
    12- ุณุชููู ุงูููุตุฉ ูุชุงุญุฉ ูู ุญุชู ุงูุชุญุงูุงุช ุงูุฏูุฑ ุงูุฃูู ููุท.
</p>
<p>ูุฑุฌู ุงูุงูุชุฒุงู ุจูุฐู ุงูุชุนูููุงุช ูุถูุงู ุงุณุชูุงุฏุชู ุงููุงููุฉ ูู ุฎุฏูุงุช ุงูููุตุฉ.</p> 

  `,
  width:900,
  showCloseButton: true,
  showCancelButton: true,
  focusConfirm: false,
  confirmButtonText: `
    <i class="fa fa-thumbs-up"></i>ููุงูู
  `,
  confirmButtonAriaLabel: "Thumbs up, great!",
 
});
}
sweat(){
  Swal.fire({
  title: "<strong> ูู ูุณูุช ูููุฉ ุงููุฑูุฑ ุ</strong>",
  icon: "info",
  html: `
  <p>ูุชู ุชุนุฏูู ูููุฉ ุงููุฑูุฑ ุนู ุทุฑูู ุงูุฃุฏูู ุฃู ุนู ุทุฑูู ุงูุทุงูุจ ุฏุงุฎู ุงูููุตุฉ
  `,
  width:900,
  showCloseButton: true,
  showCancelButton: true,
  focusConfirm: false,
  confirmButtonText: `
    <i class="fa fa-thumbs-up"></i>ููุงูู
  `,
  confirmButtonAriaLabel: "Thumbs up, great!",
 
});
}
  onSubmit() {
    this.accoutnService.login(this.model).subscribe({
      next: (res) => {
          this.toastr.success('ุชู ุชุณุฌูู ุงูุฏุฎูู ุจูุฌุงุญ');
        this.router.navigateByUrl('/main');
      },
      // The error will not always be related to the client
      // Maybe it is a server error...so we will not make any assumptions
      error: error =>{ 
        this.toastr.error('ุฎุทุฃ ูู ุงุณู ุงููุณุชุฎุฏู ุฃู ูููุฉ ุงููุฑูุฑ');
        // this.toastr.error(error.error)
      }
    });
  }
}
